class OBS_Pet {
    constructor(t, e, a) {
        this.elem = t, this.images = a, this.is_playing_function = !1, this.is_playing_animation = !1, 
        this.is_reverse = !1, this.vue_object = new Vue({
            el: "#app",
            data: {
                set_style: Boolean(e) ? "" : "none",
                load_info_flag: !1,
                load_info_icon: "",
                load_info: "",
                debug_flag: !1,
                debug_font_size: 25,
                is_playing_function: !1,
                is_playing_animation: !1,
                is_reverse: !1,
                now_called: "",
                now_image: this.images.shime1,
                speed: 0,
                x_pos: 300,
                y_pos: 0,
                win_width: document.getElementById(this.elem).offsetWidth,
                win_height: document.getElementById(this.elem).offsetHeight,
                final_y: 0,
                status: "stand",
                flip: "",
                timer_id: 0,
                motions: {
                    stand: [ 1 ],
                    walk: [ 1, 2, 1, 3 ],
                    fall: [ 4 ],
                    lean_on_right: [ 5 ],
                    lean_on_left: [ 6 ],
                    drag2right: [ 7 ],
                    drag2left: [ 8 ],
                    strong_drag2right: [ 9 ],
                    strong_drag2left: [ 10 ],
                    sit: [ 11 ],
                    climb: [ 12 ],
                    climb_first: [ 13 ],
                    climb_left_stop: [ 14, 14, 12, 13 ],
                    climb_left: [ 13, 13, 12, 14 ],
                    sing: [ 15, 16, 17 ],
                    fall_down: [ 18 ],
                    prostrate: [ 20, 21 ],
                    climb_right2left: [ 23, 24, 25 ],
                    celebrate: [ 26 ],
                    cry_stand: [ 34 ],
                    cry_walk: [ 35, 36 ]
                }
            }
        });
    }
    async play_animation(t, e = 1, a = !1) {
        let i = 0;
        for (;!this.break_playing && (i < e || a) && !this.break_playing; ) {
            this.vue_object.$data.status = t;
            for (const s of this.vue_object.$data.motions[t]) this.break_playing || await this.delayTime(300).then(() => {
                this.vue_object.$data.now_image = `statics/images/shime${s}.png`, 
                console.log(`statics/images/shime${s}.png`), i++;
            });
        }
        this.break_playing = !1;
    }
    getFiles() {
        let t = {}, e = 0;
        for (const a of document.getElementById("files").files) if ("image/png" === a.type) {
            const i = new FileReader();
            i.readAsDataURL(a), i.onload = () => {
                console.log(a), t[a.name.split(".")[0]] = i.result, e++;
            };
        }
        setTimeout(() => {
            console.log(t), 46 <= e && e <= 49 && $.post("upload-images", {
                images: JSON.stringify(t),
                csrfmiddlewaretoken: document.getElementsByName("csrfmiddlewaretoken")[0].value
            }, t => {
                "ok" === t && location.reload();
            });
        }, 5e3);
    }
    play_animation_new(t, e = 1, a = !1, i = !1) {
        let s = 0;
        const o = this.vue_object.$data.motions[t];
        var _ = o.length;
        const n = document.getElementById("role_image");
        let l = i ? _ - 1 : 0;
        this.vue_object.$data.status = t, this.vue_object.$data.timer_id = setInterval(() => {
            this.is_playing_animation = this.vue_object.$data.is_playing_animation = !0, 
            n.setAttribute("src", this.images["shime" + o[l]]), i ? --l <= 0 && (l = o.length - 1, 
            s++) : ++l === o.length && (l = 0, s++), s < e || a || (clearInterval(this.vue_object.$data.timer_id), 
            this.is_playing_animation = this.vue_object.$data.is_playing_animation = !1);
        }, 250), this.break_playing = !1;
    }
    break_now_and_play(t, e = 1, a = 0, i = !1) {
        clearInterval(this.vue_object.$data.timer_id), this.play_animation_new(t, e, i, this.is_reverse), 
        0 !== a && setTimeout(() => {
            clearInterval(this.vue_object.$data.timer_id), this.is_playing_animation = this.vue_object.$data.is_playing_animation = !1;
        }, a);
    }
    async delayTime(a) {
        return new Promise((t, e) => {
            setTimeout(() => {
                t("延迟");
            }, a);
        });
    }
    random_pos(t) {
        let e;
        switch (t) {
          case "x":
            e = Math.random() * document.getElementById(this.elem).offsetWidth;
            break;

          case "y":
            e = Math.random() * document.getElementById(this.elem).offsetHeight;
        }
        this.set_pos(t, e);
    }
    set_pos(t, e, a = !0) {
        let i, s;
        switch (t) {
          case "x":
            s = this.vue_object.$data.x_pos - e, this.flip_role(s < 0 ? "right" : "left"), 
            i = a && e > document.getElementById(this.elem).offsetWidth - 128 ? document.getElementById(this.elem).offsetWidth - 128 : e, 
            this.vue_object.$data.x_pos = i;
            break;

          case "y":
            s = this.vue_object.$data.y_pos - e, this.is_reverse = this.vue_object.$data.is_reverse = 0 < s, 
            i = a && e > document.getElementById(this.elem).offsetHeight - 128 ? document.getElementById(this.elem).offsetHeight - 128 : e, 
            this.vue_object.$data.y_pos = i;
        }
        this.vue_object.$data.speed = Math.abs(s) / 20, console.log(`random_${t}: ${e}, speed: ${this.vue_object.$data.speed}, ${t}_pos: ${this.vue_object.$data[t + "_pos"]}, ${1e3 * this.vue_object.$data.speed}ms`);
    }
    flip_role(t) {
        switch (t) {
          case "climb-left":
            this.vue_object.$data.flip = "transform: rotate(90deg)";
            break;

          case "climb-right":
            this.vue_object.$data.flip = "transform: rotate(-90deg)";
            break;

          case "climb-top-right":
            this.vue_object.$data.flip = "transform: rotate(270deg)";
            break;

          case "climb-top-left":
            this.vue_object.$data.flip = "transform: rotate(270deg) rotateY(180deg)";
            break;

          case "left":
            this.vue_object.$data.flip = "";
            break;

          case "right":
            this.vue_object.$data.flip = "transform: rotateY(180deg)";
        }
    }
    random_climb_left() {
        this.vue_object.$data.now_called = "random_climb_left", this.random_climb("left");
    }
    random_climb(t) {
        this.vue_object.$data.is_playing_function = this.is_playing_function = !0, 
        0 === this.vue_object.y_pos ? this.break_now_and_play("walk", 1, 0, !0) : this.vue_object.$data.speed = 0, 
        setTimeout(() => {
            this.set_pos("x", "left" === t ? -64 : document.getElementById(this.elem).offsetWidth - 64, !1), 
            setTimeout(() => {
                let s = "left" === t ? t : this.flip_role("right");
                this.break_now_and_play("climb"), setTimeout(() => {
                    var t = (t = Math.random() * document.getElementById(this.elem).offsetHeight) > document.getElementById(this.elem).offsetHeight - 128 ? document.getElementById(this.elem).offsetHeight - 128 : t;
                    console.log(t);
                    let e = this.vue_object.$data.y_pos - t, a = (this.vue_object.$data.final_y = Math.abs(e), 
                    this.is_reverse = this.vue_object.$data.is_reverse = 0 < e, 
                    ~~(Math.abs(e) / 20)), i = (s = !1, setInterval(() => {
                        s && this.break_now_and_play("climb_left_stop");
                        setTimeout(() => {
                            this.break_now_and_play("climb_left"), setTimeout(() => {
                                this.vue_object.$data.speed = .5, e < 0 ? this.vue_object.$data.y_pos += 20 : this.vue_object.$data.y_pos -= 20, 
                                a--, s = !0;
                            }, 600), a <= 0 && (clearInterval(i), this.break_now_and_play("climb"), 
                            this.vue_object.$data.is_playing_function = this.is_playing_function = !1, 
                            this.vue_object.$data.now_called = "");
                        }, 2e3);
                    }, 3e3));
                }, 500);
            }, 1e3 * this.vue_object.$data.speed);
        }, 520);
    }
    random_climb_right() {
        this.vue_object.$data.now_called = "random_climb_right", this.random_climb("right");
    }
    random_walk() {
        this.vue_object.$data.now_called = "random_walk", this.vue_object.$data.is_playing_function = this.is_playing_function = !0, 
        0 !== this.vue_object.y_pos ? (this.break_now_and_play("climb_left", 1, 0, !0), 
        this.set_pos("y", 0)) : this.vue_object.$data.speed = 0, setTimeout(() => {
            this.break_now_and_play("walk", 1, 0, !0), this.random_pos("x"), setTimeout(() => {
                this.break_now_and_play("stand"), this.vue_object.$data.is_playing_function = this.is_playing_function = !1, 
                this.vue_object.$data.now_called = "";
            }, 1e3 * this.vue_object.$data.speed);
        }, 1e3 * this.vue_object.$data.speed);
    }
    random_sit() {
        this.vue_object.$data.now_called = "random_sit", this.vue_object.$data.is_playing_function = this.is_playing_function = !0, 
        0 !== this.vue_object.y_pos ? (this.break_now_and_play("climb_left", 1, 0, !0), 
        this.set_pos("y", 0)) : this.vue_object.$data.speed = 0, setTimeout(() => {
            this.break_now_and_play("walk", 1, 0, !0), this.random_pos("x"), setTimeout(() => {
                this.break_now_and_play("sit"), this.vue_object.$data.is_playing_function = this.is_playing_function = !1, 
                this.vue_object.$data.now_called = "";
            }, 1e3 * this.vue_object.$data.speed);
        }, 1e3 * this.vue_object.$data.speed);
    }
    random_sing() {
        this.vue_object.$data.now_called = "random_sing", this.vue_object.$data.is_playing_function = this.is_playing_function = !0, 
        0 !== this.vue_object.y_pos ? (this.break_now_and_play("climb_left", 1, 0, !0), 
        this.set_pos("y", 0)) : this.vue_object.$data.speed = 0, setTimeout(() => {
            this.break_now_and_play("walk", 1, 0, !0), this.random_pos("x"), setTimeout(() => {
                this.break_now_and_play("sing", 10), setTimeout(() => {
                    this.break_now_and_play("stand"), this.vue_object.$data.is_playing_function = this.is_playing_function = !1, 
                    this.vue_object.$data.now_called = "";
                }, 7e3);
            }, 1e3 * this.vue_object.$data.speed);
        }, 1e3 * this.vue_object.$data.speed);
    }
    random_prostrate() {
        this.vue_object.$data.now_called = "random_prostrate", this.vue_object.$data.is_playing_function = this.is_playing_function = !0, 
        0 !== this.vue_object.y_pos ? (this.break_now_and_play("climb_left", 1, 0, !0), 
        this.set_pos("y", 0)) : this.vue_object.$data.speed = 0, setTimeout(() => {
            this.is_reverse = !1, this.break_now_and_play("prostrate", 1, 0, !0), 
            this.random_pos("x"), setTimeout(() => {
                this.break_now_and_play("prostrate"), this.vue_object.$data.is_playing_function = this.is_playing_function = !1, 
                this.vue_object.$data.now_called = "";
            }, 1e3 * this.vue_object.$data.speed);
        }, 1e3 * this.vue_object.$data.speed);
    }
}